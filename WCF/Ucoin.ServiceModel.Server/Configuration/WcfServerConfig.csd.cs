//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ucoin.ServiceModel.Server.Configuration
{
    
    
    /// <summary>
    /// The WcfServerSection Configuration Section.
    /// </summary>
    public partial class WcfServerSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WcfServerSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string WcfServerSectionSectionName = "wcf.server";
        
        /// <summary>
        /// Gets the WcfServerSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection Instance
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.WcfServerSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Service Property
        /// <summary>
        /// The XML name of the <see cref="Service"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ServicePropertyName = "service";
        
        /// <summary>
        /// Gets or sets the Service.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Service.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.ServicePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Ucoin.ServiceModel.Server.Configuration.ServiceElement Service
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Server.Configuration.ServiceElement)(base[global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.ServicePropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Server.Configuration.WcfServerSection.ServicePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Ucoin.ServiceModel.Server.Configuration
{
    
    
    /// <summary>
    /// The ServiceElement Configuration Element.
    /// </summary>
    public partial class ServiceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets or sets the Address.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Address.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.AddressPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.AddressPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.AddressPropertyName] = value;
            }
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.NamePropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Server.Configuration.ServiceElement.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
