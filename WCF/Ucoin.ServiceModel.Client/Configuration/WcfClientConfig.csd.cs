//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ucoin.ServiceModel.Client.Configuration
{
    
    
    /// <summary>
    /// The WcfClientSection Configuration Section.
    /// </summary>
    public partial class WcfClientSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the WcfClientSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string WcfClientSectionSectionName = "wcf.client";
        
        /// <summary>
        /// Gets the WcfClientSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection Instance
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection)(global::System.Configuration.ConfigurationManager.GetSection(global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.WcfClientSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Services Property
        /// <summary>
        /// The XML name of the <see cref="Services"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ServicesPropertyName = "services";
        
        /// <summary>
        /// Gets or sets the Services.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Services.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ServicesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Ucoin.ServiceModel.Client.Configuration.ServiceCollection Services
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceCollection)(base[global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ServicesPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ServicesPropertyName] = value;
            }
        }
        #endregion
        
        #region Clients Property
        /// <summary>
        /// The XML name of the <see cref="Clients"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ClientsPropertyName = "clients";
        
        /// <summary>
        /// Gets or sets the Clients.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Clients.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ClientsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::Ucoin.ServiceModel.Client.Configuration.ClientCollection Clients
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ClientCollection)(base[global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ClientsPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.WcfClientSection.ClientsPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Ucoin.ServiceModel.Client.Configuration
{
    
    
    /// <summary>
    /// A collection of ServiceElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Ucoin.ServiceModel.Client.Configuration.ServiceElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Ucoin.ServiceModel.Client.Configuration.ServiceCollection.ServiceElementPropertyName)]
    public partial class ServiceCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ServiceElementPropertyName = "service";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Ucoin.ServiceModel.Client.Configuration.ServiceCollection.ServiceElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Ucoin.ServiceModel.Client.Configuration.ServiceCollection.ServiceElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceElement)(element)).Assembly;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Ucoin.ServiceModel.Client.Configuration.ServiceElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ServiceElement this[int index]
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> with the specified key.
        /// </summary>
        /// <param name="assembly">The key of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ServiceElement this[object assembly]
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceElement)(base.BaseGet(assembly)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="service">The <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Ucoin.ServiceModel.Client.Configuration.ServiceElement service)
        {
            base.BaseAdd(service);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="service">The <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Ucoin.ServiceModel.Client.Configuration.ServiceElement service)
        {
            base.BaseRemove(this.GetElementKey(service));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ServiceElement GetItemAt(int index)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> with the specified key.
        /// </summary>
        /// <param name="assembly">The key of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ServiceElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ServiceElement GetItemByKey(string assembly)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ServiceElement)(base.BaseGet(((object)(assembly)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Ucoin.ServiceModel.Client.Configuration
{
    
    
    /// <summary>
    /// The ServiceElement Configuration Element.
    /// </summary>
    public partial class ServiceElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Assembly Property
        /// <summary>
        /// The XML name of the <see cref="Assembly"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AssemblyPropertyName = "assembly";
        
        /// <summary>
        /// Gets or sets the Assembly.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Assembly.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.AssemblyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Assembly
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.AssemblyPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.AssemblyPropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.TypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.TypePropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.ServiceElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace Ucoin.ServiceModel.Client.Configuration
{
    
    
    /// <summary>
    /// A collection of ClientElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::Ucoin.ServiceModel.Client.Configuration.ClientElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::Ucoin.ServiceModel.Client.Configuration.ClientCollection.ClientElementPropertyName)]
    public partial class ClientCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string ClientElementPropertyName = "client";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::Ucoin.ServiceModel.Client.Configuration.ClientCollection.ClientElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::Ucoin.ServiceModel.Client.Configuration.ClientCollection.ClientElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ClientElement)(element)).Assembly;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::Ucoin.ServiceModel.Client.Configuration.ClientElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ClientElement this[int index]
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ClientElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> with the specified key.
        /// </summary>
        /// <param name="assembly">The key of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ClientElement this[object assembly]
        {
            get
            {
                return ((global::Ucoin.ServiceModel.Client.Configuration.ClientElement)(base.BaseGet(assembly)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="client">The <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::Ucoin.ServiceModel.Client.Configuration.ClientElement client)
        {
            base.BaseAdd(client);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="client">The <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::Ucoin.ServiceModel.Client.Configuration.ClientElement client)
        {
            base.BaseRemove(this.GetElementKey(client));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ClientElement GetItemAt(int index)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ClientElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> with the specified key.
        /// </summary>
        /// <param name="assembly">The key of the <see cref="global::Ucoin.ServiceModel.Client.Configuration.ClientElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::Ucoin.ServiceModel.Client.Configuration.ClientElement GetItemByKey(string assembly)
        {
            return ((global::Ucoin.ServiceModel.Client.Configuration.ClientElement)(base.BaseGet(((object)(assembly)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace Ucoin.ServiceModel.Client.Configuration
{
    
    
    /// <summary>
    /// The ClientElement Configuration Element.
    /// </summary>
    public partial class ClientElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Address Property
        /// <summary>
        /// The XML name of the <see cref="Address"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AddressPropertyName = "address";
        
        /// <summary>
        /// Gets or sets the Address.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Address.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AddressPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Address
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AddressPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AddressPropertyName] = value;
            }
        }
        #endregion
        
        #region Assembly Property
        /// <summary>
        /// The XML name of the <see cref="Assembly"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string AssemblyPropertyName = "assembly";
        
        /// <summary>
        /// Gets or sets the Assembly.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Assembly.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AssemblyPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Assembly
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AssemblyPropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.AssemblyPropertyName] = value;
            }
        }
        #endregion
        
        #region Type Property
        /// <summary>
        /// The XML name of the <see cref="Type"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string TypePropertyName = "type";
        
        /// <summary>
        /// Gets or sets the Type.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Type.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::Ucoin.ServiceModel.Client.Configuration.ClientElement.TypePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Type
        {
            get
            {
                return ((string)(base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.TypePropertyName]));
            }
            set
            {
                base[global::Ucoin.ServiceModel.Client.Configuration.ClientElement.TypePropertyName] = value;
            }
        }
        #endregion
    }
}
